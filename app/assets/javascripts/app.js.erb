var app = angular.module("app", ['ngSanitize']);

app.config(function($httpProvider) {

  var logsOutUserOn401 = function($location, $q, SessionService, FlashService) {
    var success = function(response) {
      return response;
    };

    var error = function(response) {
      if (response.status === 401) {
        SessionService.unset('authenticated');
        $location.path('/login');
        FlashService.show(response.data.flash);
      }
      return $q.reject(response);
    };

    return function(promise) {
      return promise.then(success, error);
    };
  };

  $httpProvider.responseInterceptors.push(logsOutUserOn401);

});

app.config(function($routeProvider) {

  $routeProvider.when('/login', {
    templateUrl: '<%= asset_path("employees/login.html") %>',
    controller: 'LoginController'
  });

  $routeProvider.when('/home', {
    templateUrl: '<%= asset_path("employees/home.html") %>',
    controller: 'HomeController'
  });

  $routeProvider.when('/books', {
    templateUrl: '<%= asset_path("employees/books.html") %>',
    controller: 'BooksController',
    resolve: {
      books: function(BookService) {
        return BookService.get();
      }
    }
  });

  $routeProvider.otherwise({redirectTo: '/login'});

});

app.run(function($rootScope, $location, AuthenticationService, FlashService) {
  var routesThatRequireAuth = ['/home'];
  var routesIfLogin = ['/login'];

  $rootScope.$on('$routeChangeStart', function(event, next, current) {
    if (_(routesThatRequireAuth).contains($location.path()) && !AuthenticationService.isLoggedIn()) {
      $location.path('/login');
      FlashService.show("Please log in to continue.");
    } else if (_(routesIfLogin).contains($location.path()) && AuthenticationService.isLoggedIn()) {
      $location.path('/home');
      FlashService.show("You are already login.");
    }

  });

});

app.directive("showsMessageWhenHovered", function() {
  return {
    restrict: "A", // A = Attribute, C = CSS Class, E = HTML Element, M = HTML Comment
    link: function(scope, element, attributes) {
      var originalMessage = scope.message;
      element.bind("mouseenter", function() {
        scope.message = attributes.message;
        scope.$apply();
      });
      element.bind("mouseleave", function() {
        scope.message = originalMessage;
        scope.$apply();
      });
    }
  };
});
